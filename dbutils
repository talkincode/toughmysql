#!/bin/bash


usage ()
{
    cat <<EOF
    Usage: $0 [OPTIONS] 
    showmaster                  mysql instance show master status
    showslave                   mysql instance show slave status
    upmaster                    mysql instance update master sync config
    backup                      mysql instance backup database
    makedb                      mysql instance create new db

    All other options are passed to the dbutils program.
EOF
        exit 1
}

showdbs()
{
    echo "show databases;" | mysql -uroot --password=$MYSQL_ROOT_PASSWORD
}

backup()
{
    USER="root"
    PASSWORD=$MYSQL_ROOT_PASSWORD
    OUTPUT="/var/backup"

    find $OUTPUT -name "*.sql.gz" -type f -mtime +7 -exec rm {} ; > /dev/null 2>&1
     
    databases=`mysql --user=$USER --password=$PASSWORD -e "SHOW DATABASES;" | tr -d "| " | grep -v Database`
     
    for db in $databases; do
        if [[ "$db" != "information_schema" ]] && [[ "$db" != "performance_schema" ]] ; then
            echo "Dumping database: $db"
            mysqldump --force --opt --user=$USER --password=$PASSWORD --databases $db > $OUTPUT/`date +%Y%m%d`.$db.sql
            gzip $OUTPUT/`date +%Y%m%d`.$db.sql
        fi
    done
}

makedb()
{
    read -p "mysql user : " mysql_user
    read -p "mysql user password : " mysql_password
    read -p "mysql database : " mysql_database

    if [[ $mysql_database != "" ]]; then
        CREATE_SQL="CREATE DATABASE IF NOT EXISTS \`$mysql_database\` CHARACTER SET utf8 COLLATE utf8_general_ci;"
        echo $CREATE_SQL | mysql -uroot --password=$MYSQL_ROOT_PASSWORD
    fi

    if [[ $mysql_user != "" ]]; then
        GRANT_SQL="GRANT ALL ON \`$mysql_database\`.* to '$mysql_user'@'%' IDENTIFIED BY '$mysql_password';" 
        echo $GRANT_SQL | mysql -uroot --password=$MYSQL_ROOT_PASSWORD
    fi
}

showmaster()
{
    echo 'FLUSH TABLES WITH READ LOCK;SHOW MASTER STATUS \G;Unlock Tables;' | mysql -uroot --password=$MYSQL_ROOT_PASSWORD
}

showslave()
{
    echo 'Show Slave Status \G;' | mysql -uroot --password=$MYSQL_ROOT_PASSWORD
}

upmaster()
{
    read -p "MASTER_HOST: " mysql_host
    mysql_host=\${mysql_host:-""}
    read -p "MASTER_PORT (3306): " mysql_port
    mysql_port=\${mysql_port:-"3306"}
    read -p "MASTER_REPL_PASSWORD ($MYSQL_REPL_PASSWORD): " mysql_repl_password
    mysql_repl_password=\${mysql_repl_password:-$MYSQL_REPL_PASSWORD}
    read -p "MASTER_LOG_FILE: " mysql_log_file
    mysql_log_file=\${mysql_log_file:-""}
    read -p "MASTER_LOG_POS: " mysql_log_pos
    mysql_log_pos=\${mysql_log_pos:-""}

    echo "STOP SLAVE;\
    CHANGE MASTER TO MASTER_HOST = '\$mysql_host', MASTER_PORT = \$mysql_port, \
     MASTER_USER = 'repl', MASTER_PASSWORD = '\$mysql_repl_password',\
     MASTER_LOG_FILE = '\$mysql_log_file', \
     MASTER_LOG_POS = \$mysql_log_pos; \
    START SLAVE;" | mysql -uroot --password=$MYSQL_ROOT_PASSWORD
}



case "$1" in

  backup)
    backup
  ;;

  makedb)
    makedb
  ;;

  showmaster)
    showmaster
  ;;

  showslave)
    showslave
  ;;

  upmaster)
    upmaster
  ;;

  *)
   usage
  ;;

esac



